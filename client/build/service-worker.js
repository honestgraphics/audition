"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","be75ec2b44d69b18d1dcee227eeff0e5"],["/static/css/main.fdf9396d.css","1b97c260e2a209a90dd3993d2989f1a1"],["/static/js/main.addfbf49.js","503f10ebdbbc33f3d248d8911fbb9435"],["/static/media/Footer.f0203acc.scss","f0203accb8ca7c5369877e16420299c9"],["/static/media/Header.fcacbce0.scss","fcacbce03ee78ed4eb80e9da91a68648"],["/static/media/HomeCards.7b09c627.scss","7b09c627fb603efd77f2996415409a70"],["/static/media/LoginBox.6425eb50.scss","6425eb5039aa46bc76fb3fc48556779c"],["/static/media/LogoutBox.0ec897df.scss","0ec897df553eb69e35bb6e8e44dfa119"],["/static/media/Spinner.8b2b765f.gif","8b2b765f9746635971e569a8ad77ab31"],["/static/media/Table.0aa1f873.scss","0aa1f8739c782f46f1fc043094676bd0"],["/static/media/auditionlogo.cfabe37d.png","cfabe37de5e593d4579bc982862ebb6b"],["/static/media/background.d808fef0.png","d808fef0da889f09742d3a074f356bc5"],["/static/media/modal.6e1d6324.scss","6e1d6324051b1c43499080243dcb6a66"],["/static/media/modalplaybtn.83624298.scss","83624298185c56d3b5d801d9230e2a26"],["/static/media/tableplaybtn.d41d8cd9.scss","d41d8cd98f00b204e9800998ecf8427e"],["/static/media/unsplash1.0d5e9528.jpg","0d5e9528e72be342d39c04080c6977b2"],["/static/media/unsplash2.bf7d5049.jpg","bf7d5049e667eb8d323ff59270bee90a"],["/static/media/unsplash3.3f618e9b.jpg","3f618e9b9d5bae3f1621fd94c324ba51"],["/static/media/unsplash5.2bd1f3de.jpg","2bd1f3de4e07909eb814ffb71e2bb648"],["/static/media/uploadbtn.1e2e8982.scss","1e2e898291eee52a3a238c9cbb70286b"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var s=new URL(e);return n&&s.pathname.match(n)||(s.search+=(s.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),s.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),s=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),s]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});